openapi: 3.0.1
info:
  title: api/v1/activity_service.proto
  version: version not set
servers:
- url: /
tags:
- name: ActivityService
- name: UserService
- name: AuthService
- name: IdentityProviderService
- name: InboxService
- name: MarkdownService
- name: ResourceService
- name: MemoService
- name: WebhookService
- name: WorkspaceService
- name: WorkspaceSettingService
paths:
  /api/v1/auth/signin:
    post:
      tags:
      - AuthService
      summary: SignIn signs in the user with the given username and password.
      operationId: AuthService_SignIn
      parameters:
      - name: username
        in: query
        description: The username to sign in with.
        schema:
          type: string
      - name: password
        in: query
        description: The password to sign in with.
        schema:
          type: string
      - name: neverExpire
        in: query
        description: Whether the session should never expire.
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/auth/signin/sso:
    post:
      tags:
      - AuthService
      summary: SignInWithSSO signs in the user with the given SSO code.
      operationId: AuthService_SignInWithSSO
      parameters:
      - name: idpId
        in: query
        description: The ID of the SSO provider.
        schema:
          type: integer
          format: int32
      - name: code
        in: query
        description: The code to sign in with.
        schema:
          type: string
      - name: redirectUri
        in: query
        description: The redirect URI.
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/auth/signout:
    post:
      tags:
      - AuthService
      summary: SignOut signs out the user.
      operationId: AuthService_SignOut
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/auth/signup:
    post:
      tags:
      - AuthService
      summary: SignUp signs up the user with the given username and password.
      operationId: AuthService_SignUp
      parameters:
      - name: username
        in: query
        description: The username to sign up with.
        schema:
          type: string
      - name: password
        in: query
        description: The password to sign up with.
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/auth/status:
    post:
      tags:
      - AuthService
      summary: GetAuthStatus returns the current auth status of the user.
      operationId: AuthService_GetAuthStatus
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/memos:
    get:
      tags:
      - MemoService
      summary: ListMemos lists memos with pagination and filter.
      operationId: MemoService_ListMemos
      parameters:
      - name: pageSize
        in: query
        description: The maximum number of memos to return.
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "A page token, received from a previous `ListMemos` call.\r\n\
          Provide this to retrieve the subsequent page."
        schema:
          type: string
      - name: filter
        in: query
        description: "Filter is used to filter memos returned in the list.\r\nFormat:\
          \ \"creator == 'users/{uid}' && visibilities == ['PUBLIC', 'PROTECTED']\""
        schema:
          type: string
      - name: view
        in: query
        description: |-
          The view of the memo.

           - MEMO_VIEW_FULL: The full view of the memo. Includes all fields.
           - MEMO_VIEW_METADATA_ONLY: The metadata only view of the memo. Excludes the content/snippet fields.
        schema:
          type: string
          default: MEMO_VIEW_UNSPECIFIED
          enum:
          - MEMO_VIEW_UNSPECIFIED
          - MEMO_VIEW_FULL
          - MEMO_VIEW_METADATA_ONLY
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListMemosResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
      - MemoService
      summary: CreateMemo creates a memo.
      operationId: MemoService_CreateMemo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateMemoRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiv1Memo'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /api/v1/memos:by-uid/{uid}:
    get:
      tags:
      - MemoService
      summary: GetMemoByUid gets a memo by uid
      operationId: MemoService_GetMemoByUid
      parameters:
      - name: uid
        in: path
        description: The uid of the memo.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiv1Memo'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/reactions/{reactionId}:
    delete:
      tags:
      - MemoService
      summary: DeleteMemoReaction deletes a reaction for a memo.
      operationId: MemoService_DeleteMemoReaction
      parameters:
      - name: reactionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/resources:
    get:
      tags:
      - ResourceService
      summary: ListResources lists all resources.
      operationId: ResourceService_ListResources
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListResourcesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
      - ResourceService
      summary: CreateResource creates a new resource.
      operationId: ResourceService_CreateResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Resource'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Resource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: resource
  /api/v1/resources:by-uid/{uid}:
    get:
      tags:
      - ResourceService
      summary: GetResourceByUid returns a resource by uid.
      operationId: ResourceService_GetResourceByUid
      parameters:
      - name: uid
        in: path
        description: The uid of the resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Resource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/workspace/profile:
    get:
      tags:
      - WorkspaceService
      summary: GetWorkspaceProfile returns the workspace profile.
      operationId: WorkspaceService_GetWorkspaceProfile
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1WorkspaceProfile'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/{memo_name}:
    patch:
      tags:
      - MemoService
      summary: UpdateMemo updates a memo.
      operationId: MemoService_UpdateMemo
      parameters:
      - name: memo_name
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}\r\nid is the system\
          \ generated id."
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                  description: The user defined id of the memo.
                state:
                  $ref: '#/components/schemas/v1State'
                creator:
                  title: "The name of the creator.\r\nFormat: users/{id}"
                  type: string
                createTime:
                  type: string
                  format: date-time
                updateTime:
                  type: string
                  format: date-time
                displayTime:
                  type: string
                  format: date-time
                content:
                  type: string
                visibility:
                  $ref: '#/components/schemas/v1Visibility'
                tags:
                  type: array
                  items:
                    type: string
                pinned:
                  type: boolean
                resources:
                  type: array
                  items:
                    $ref: '#/components/schemas/v1Resource'
                relations:
                  type: array
                  items:
                    $ref: '#/components/schemas/v1MemoRelation'
                reactions:
                  type: array
                  readOnly: true
                  items:
                    $ref: '#/components/schemas/v1Reaction'
                property:
                  $ref: '#/components/schemas/v1MemoProperty'
                parent:
                  title: "The name of the parent memo.\r\nFormat: memos/{id}"
                  type: string
                  readOnly: true
                snippet:
                  type: string
                  description: The snippet of the memo content. Plain text only.
                  readOnly: true
                location:
                  $ref: '#/components/schemas/apiv1Location'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiv1Memo'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: memo
  /api/v1/{name_3}:
    get:
      tags:
      - ResourceService
      summary: GetResource returns a resource by name.
      operationId: ResourceService_GetResource
      parameters:
      - name: name_3
        in: path
        description: "The name of the resource.\r\nFormat: resources/{id}\r\nid is\
          \ the system generated unique identifier."
        required: true
        schema:
          pattern: "resources/[^/]+"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Resource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
      - ResourceService
      summary: DeleteResource deletes a resource by name.
      operationId: ResourceService_DeleteResource
      parameters:
      - name: name_3
        in: path
        description: "The name of the resource.\r\nFormat: resources/{id}\r\nid is\
          \ the system generated unique identifier."
        required: true
        schema:
          pattern: "resources/[^/]+"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/{name_4}:
    get:
      tags:
      - MemoService
      summary: GetMemo gets a memo.
      operationId: MemoService_GetMemo
      parameters:
      - name: name_4
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiv1Memo'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    delete:
      tags:
      - MemoService
      summary: DeleteMemo deletes a memo.
      operationId: MemoService_DeleteMemo
      parameters:
      - name: name_4
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/{name}/comments:
    get:
      tags:
      - MemoService
      summary: ListMemoComments lists comments for a memo.
      operationId: MemoService_ListMemoComments
      parameters:
      - name: name
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListMemoCommentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
      - MemoService
      summary: CreateMemoComment creates a comment for a memo.
      operationId: MemoService_CreateMemoComment
      parameters:
      - name: name
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateMemoRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiv1Memo'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: comment
  /api/v1/{name}/reactions:
    get:
      tags:
      - MemoService
      summary: ListMemoReactions lists reactions for a memo.
      operationId: MemoService_ListMemoReactions
      parameters:
      - name: name
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListMemoReactionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    post:
      tags:
      - MemoService
      summary: UpsertMemoReaction upserts a reaction for a memo.
      operationId: MemoService_UpsertMemoReaction
      parameters:
      - name: name
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoServiceUpsertMemoReactionBody'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Reaction'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /api/v1/{name}/relations:
    get:
      tags:
      - MemoService
      summary: ListMemoRelations lists relations for a memo.
      operationId: MemoService_ListMemoRelations
      parameters:
      - name: name
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListMemoRelationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
      - MemoService
      summary: SetMemoRelations sets relations for a memo.
      operationId: MemoService_SetMemoRelations
      parameters:
      - name: name
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoServiceSetMemoRelationsBody'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /api/v1/{name}/resources:
    get:
      tags:
      - MemoService
      summary: ListMemoResources lists resources for a memo.
      operationId: MemoService_ListMemoResources
      parameters:
      - name: name
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListMemoResourcesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
    patch:
      tags:
      - MemoService
      summary: SetMemoResources sets resources for a memo.
      operationId: MemoService_SetMemoResources
      parameters:
      - name: name
        in: path
        description: "The name of the memo.\r\nFormat: memos/{id}"
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoServiceSetMemoResourcesBody'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /api/v1/{name}/setting:
    get:
      tags:
      - UserService
      summary: GetUserSetting gets the setting of a user.
      operationId: UserService_GetUserSetting
      parameters:
      - name: name
        in: path
        description: "The name of the user.\r\nFormat: users/{id}"
        required: true
        schema:
          pattern: "users/[^/]+"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiv1UserSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/{parent}/tags/{tag}:
    delete:
      tags:
      - MemoService
      summary: DeleteMemoTag deletes a tag for a memo.
      operationId: MemoService_DeleteMemoTag
      parameters:
      - name: parent
        in: path
        description: "The parent, who owns the tags.\r\nFormat: memos/{id}. Use \"\
          memos/-\" to delete all tags."
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      - name: tag
        in: path
        required: true
        schema:
          type: string
      - name: deleteRelatedMemos
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /api/v1/{parent}/tags:rename:
    patch:
      tags:
      - MemoService
      summary: RenameMemoTag renames a tag for a memo.
      operationId: MemoService_RenameMemoTag
      parameters:
      - name: parent
        in: path
        description: "The parent, who owns the tags.\r\nFormat: memos/{id}. Use \"\
          memos/-\" to rename all tags."
        required: true
        schema:
          pattern: "memos/[^/]+"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoServiceRenameMemoTagBody'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: body
  /api/v1/{resource.name}:
    patch:
      tags:
      - ResourceService
      summary: UpdateResource updates a resource.
      operationId: ResourceService_UpdateResource
      parameters:
      - name: resource.name
        in: path
        description: "The name of the resource.\r\nFormat: resources/{id}\r\nid is\
          \ the system generated unique identifier."
        required: true
        schema:
          pattern: "resources/[^/]+"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                  description: The user defined id of the resource.
                createTime:
                  type: string
                  format: date-time
                  readOnly: true
                filename:
                  type: string
                content:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                externalLink:
                  type: string
                type:
                  type: string
                size:
                  type: string
                  format: int64
                memo:
                  title: "The related memo.\r\nFormat: memos/{id}"
                  type: string
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Resource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: resource
  /api/v1/{setting.name}:
    patch:
      tags:
      - UserService
      summary: UpdateUserSetting updates the setting of a user.
      operationId: UserService_UpdateUserSetting
      parameters:
      - name: setting.name
        in: path
        description: "The name of the user.\r\nFormat: users/{id}"
        required: true
        schema:
          pattern: "users/[^/]+/setting"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locale:
                  type: string
                  description: The preferred locale of the user.
                appearance:
                  type: string
                  description: The preferred appearance of the user.
                memoVisibility:
                  type: string
                  description: The default visibility of the memo.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiv1UserSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: setting
  /api/v1/{user.name}:
    patch:
      tags:
      - UserService
      summary: UpdateUser updates a user.
      operationId: UserService_UpdateUser
      parameters:
      - name: user.name
        in: path
        description: "The name of the user.\r\nFormat: users/{id}"
        required: true
        schema:
          pattern: "users/[^/]+"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: The system generated uid of the user.
                  format: int32
                role:
                  $ref: '#/components/schemas/UserRole'
                username:
                  type: string
                email:
                  type: string
                nickname:
                  type: string
                avatarUrl:
                  type: string
                description:
                  type: string
                password:
                  type: string
                state:
                  $ref: '#/components/schemas/v1State'
                createTime:
                  type: string
                  format: date-time
                updateTime:
                  type: string
                  format: date-time
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
      x-codegen-request-body-name: user
  /file/{name}/avatar:
    get:
      tags:
      - UserService
      summary: GetUserAvatarBinary gets the avatar of a user.
      operationId: UserService_GetUserAvatarBinary
      parameters:
      - name: name
        in: path
        description: "The name of the user.\r\nFormat: users/{id}"
        required: true
        schema:
          pattern: "users/[^/]+"
          type: string
      - name: httpBody.contentType
        in: query
        description: The HTTP Content-Type header value specifying the content type
          of the body.
        schema:
          type: string
      - name: httpBody.data
        in: query
        description: The HTTP request/response body as raw binary.
        schema:
          type: string
          format: byte
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiHttpBody'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
  /file/{name}/{filename}:
    get:
      tags:
      - ResourceService
      summary: GetResourceBinary returns a resource binary by name.
      operationId: ResourceService_GetResourceBinary
      parameters:
      - name: name
        in: path
        description: "The name of the resource.\r\nFormat: resources/{id}\r\nid is\
          \ the system generated unique identifier."
        required: true
        schema:
          pattern: "resources/[^/]+"
          type: string
      - name: filename
        in: path
        description: The filename of the resource. Mainly used for downloading.
        required: true
        schema:
          type: string
      - name: thumbnail
        in: query
        description: A flag indicating if the thumbnail version of the resource should
          be returned
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiHttpBody'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/googlerpcStatus'
components:
  schemas:
    ListNodeKind:
      type: string
      default: KIND_UNSPECIFIED
      enum:
      - KIND_UNSPECIFIED
      - ORDERED
      - UNORDERED
      - DESCRIPTION
    MemoServiceRenameMemoTagBody:
      type: object
      properties:
        oldTag:
          type: string
        newTag:
          type: string
    MemoServiceSetMemoRelationsBody:
      type: object
      properties:
        relations:
          type: array
          items:
            $ref: '#/components/schemas/v1MemoRelation'
    MemoServiceSetMemoResourcesBody:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/v1Resource'
    MemoServiceUpsertMemoReactionBody:
      type: object
      properties:
        reaction:
          $ref: '#/components/schemas/v1Reaction'
    UserRole:
      type: string
      default: ROLE_UNSPECIFIED
      enum:
      - ROLE_UNSPECIFIED
      - HOST
      - ADMIN
      - USER
    apiHttpBody:
      type: object
      properties:
        contentType:
          type: string
          description: The HTTP Content-Type header value specifying the content type
            of the body.
        data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: The HTTP request/response body as raw binary.
          format: byte
        extensions:
          type: array
          description: |-
            Application specific response metadata. Must be set in the first response
            for streaming APIs.
          items:
            $ref: '#/components/schemas/protobufAny'
      description: |-
        Message that represents an arbitrary HTTP body. It should only be used for
        payload formats that can't be represented as JSON, such as raw binary or
        an HTML page.


        This message can be used both in streaming and non-streaming API methods in
        the request as well as the response.

        It can be used as a top-level request field, which is convenient if one
        wants to extract parameters from either the URL or HTTP template into the
        request fields and also want access to the raw HTTP body.

        Example:

            message GetResourceRequest {
              // A unique request id.
              string request_id = 1;

              // The raw HTTP body is bound to this field.
              google.api.HttpBody http_body = 2;

            }

            service ResourceService {
              rpc GetResource(GetResourceRequest)
                returns (google.api.HttpBody);
              rpc UpdateResource(google.api.HttpBody)
                returns (google.protobuf.Empty);

            }

        Example with streaming methods:

            service CaldavService {
              rpc GetCalendar(stream google.api.HttpBody)
                returns (stream google.api.HttpBody);
              rpc UpdateCalendar(stream google.api.HttpBody)
                returns (stream google.api.HttpBody);

            }

        Use of this type only changes how the request and response bodies are
        handled, all other features will continue to work unchanged.
    apiv1FieldMapping:
      type: object
      properties:
        identifier:
          type: string
        displayName:
          type: string
        email:
          type: string
    apiv1Location:
      type: object
      properties:
        placeholder:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    apiv1Memo:
      type: object
      properties:
        name:
          type: string
          description: "The name of the memo.\r\nFormat: memos/{id}\r\nid is the system\
            \ generated id."
        uid:
          type: string
          description: The user defined id of the memo.
        state:
          $ref: '#/components/schemas/v1State'
        creator:
          title: "The name of the creator.\r\nFormat: users/{id}"
          type: string
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        displayTime:
          type: string
          format: date-time
        content:
          type: string
        visibility:
          $ref: '#/components/schemas/v1Visibility'
        tags:
          type: array
          items:
            type: string
        pinned:
          type: boolean
        resources:
          type: array
          items:
            $ref: '#/components/schemas/v1Resource'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/v1MemoRelation'
        reactions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/v1Reaction'
        property:
          $ref: '#/components/schemas/v1MemoProperty'
        parent:
          title: "The name of the parent memo.\r\nFormat: memos/{id}"
          type: string
          readOnly: true
        snippet:
          type: string
          description: The snippet of the memo content. Plain text only.
          readOnly: true
        location:
          $ref: '#/components/schemas/apiv1Location'
    apiv1OAuth2Config:
      type: object
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        authUrl:
          type: string
        tokenUrl:
          type: string
        userInfoUrl:
          type: string
        scopes:
          type: array
          items:
            type: string
        fieldMapping:
          $ref: '#/components/schemas/apiv1FieldMapping'
    apiv1UserSetting:
      type: object
      properties:
        name:
          title: "The name of the user.\r\nFormat: users/{id}"
          type: string
        locale:
          type: string
          description: The preferred locale of the user.
        appearance:
          type: string
          description: The preferred appearance of the user.
        memoVisibility:
          type: string
          description: The default visibility of the memo.
    apiv1WorkspaceCustomProfile:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        logoUrl:
          type: string
        locale:
          type: string
        appearance:
          type: string
    apiv1WorkspaceGeneralSetting:
      type: object
      properties:
        disallowUserRegistration:
          type: boolean
          description: disallow_user_registration disallows user registration.
        disallowPasswordAuth:
          type: boolean
          description: disallow_password_auth disallows password authentication.
        additionalScript:
          type: string
          description: additional_script is the additional script.
        additionalStyle:
          type: string
          description: additional_style is the additional style.
        customProfile:
          $ref: '#/components/schemas/apiv1WorkspaceCustomProfile'
        weekStartDayOffset:
          type: integer
          description: "week_start_day_offset is the week start day offset from Sunday.\r\
            \n0: Sunday, 1: Monday, 2: Tuesday, 3: Wednesday, 4: Thursday, 5: Friday,\
            \ 6: Saturday\r\nDefault is Sunday."
          format: int32
        disallowChangeUsername:
          type: boolean
          description: disallow_change_username disallows changing username.
        disallowChangeNickname:
          type: boolean
          description: disallow_change_nickname disallows changing nickname.
    apiv1WorkspaceMemoRelatedSetting:
      type: object
      properties:
        disallowPublicVisibility:
          type: boolean
          description: disallow_public_visibility disallows set memo as public visibility.
        displayWithUpdateTime:
          type: boolean
          description: display_with_update_time orders and displays memo with update
            time.
        contentLengthLimit:
          type: integer
          description: content_length_limit is the limit of content length. Unit is
            byte.
          format: int32
        enableAutoCompact:
          type: boolean
          description: enable_auto_compact enables auto compact for large content.
        enableDoubleClickEdit:
          type: boolean
          description: enable_double_click_edit enables editing on double click.
        enableLinkPreview:
          type: boolean
          description: enable_link_preview enables links preview.
        enableComment:
          type: boolean
          description: enable_comment enables comment.
        enableLocation:
          type: boolean
          description: enable_location enables setting location for memo.
        defaultVisibility:
          type: string
          description: default_visibility set the global memos default visibility.
        reactions:
          type: array
          description: reactions is the list of reactions.
          items:
            type: string
        disableMarkdownShortcuts:
          type: boolean
          description: disable_markdown_shortcuts disallow the registration of markdown
            shortcuts.
    googlerpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com. As of May 2023, there are no widely used type server
            implementations and no plans to implement one.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
      additionalProperties:
        type: object
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".

        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
    v1CreateMemoRequest:
      type: object
      properties:
        content:
          type: string
        visibility:
          $ref: '#/components/schemas/v1Visibility'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/v1Resource'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/v1MemoRelation'
        location:
          $ref: '#/components/schemas/apiv1Location'
    v1LinkMetadata:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        image:
          type: string
    v1ListMemoCommentsResponse:
      type: object
      properties:
        memos:
          type: array
          items:
            $ref: '#/components/schemas/apiv1Memo'
    v1ListMemoReactionsResponse:
      type: object
      properties:
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/v1Reaction'
    v1ListMemoRelationsResponse:
      type: object
      properties:
        relations:
          type: array
          items:
            $ref: '#/components/schemas/v1MemoRelation'
    v1ListMemoResourcesResponse:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/v1Resource'
    v1ListMemosResponse:
      type: object
      properties:
        memos:
          type: array
          items:
            $ref: '#/components/schemas/apiv1Memo'
        nextPageToken:
          type: string
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page.\r\nIf this field is omitted, there are no subsequent pages."
    v1ListResourcesResponse:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/v1Resource'
    v1MemoProperty:
      type: object
      properties:
        hasLink:
          type: boolean
        hasTaskList:
          type: boolean
        hasCode:
          type: boolean
        hasIncompleteTasks:
          type: boolean
    v1MemoRelation:
      type: object
      properties:
        memo:
          $ref: '#/components/schemas/v1MemoRelationMemo'
        relatedMemo:
          $ref: '#/components/schemas/v1MemoRelationMemo'
        type:
          $ref: '#/components/schemas/v1MemoRelationType'
    v1MemoRelationMemo:
      type: object
      properties:
        name:
          title: "The name of the memo.\r\nFormat: memos/{id}"
          type: string
        uid:
          type: string
        snippet:
          type: string
          description: The snippet of the memo content. Plain text only.
          readOnly: true
    v1MemoRelationType:
      type: string
      default: TYPE_UNSPECIFIED
      enum:
      - TYPE_UNSPECIFIED
      - REFERENCE
      - COMMENT
    v1MemoView:
      type: string
      description: |2-
         - MEMO_VIEW_FULL: The full view of the memo. Includes all fields.
         - MEMO_VIEW_METADATA_ONLY: The metadata only view of the memo. Excludes the content/snippet fields.
      default: MEMO_VIEW_UNSPECIFIED
      enum:
      - MEMO_VIEW_UNSPECIFIED
      - MEMO_VIEW_FULL
      - MEMO_VIEW_METADATA_ONLY
    v1Reaction:
      type: object
      properties:
        id:
          type: integer
          format: int32
        creator:
          title: "The name of the creator.\r\nFormat: users/{id}"
          type: string
        contentId:
          type: string
        reactionType:
          type: string
    v1Resource:
      type: object
      properties:
        name:
          type: string
          description: "The name of the resource.\r\nFormat: resources/{id}\r\nid\
            \ is the system generated unique identifier."
        uid:
          type: string
          description: The user defined id of the resource.
        createTime:
          type: string
          format: date-time
          readOnly: true
        filename:
          type: string
        content:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        externalLink:
          type: string
        type:
          type: string
        size:
          type: string
          format: int64
        memo:
          title: "The related memo.\r\nFormat: memos/{id}"
          type: string
    v1State:
      type: string
      default: STATE_UNSPECIFIED
      enum:
      - STATE_UNSPECIFIED
      - NORMAL
      - ARCHIVED
    v1User:
      type: object
      properties:
        name:
          title: "The name of the user.\r\nFormat: users/{id}"
          type: string
        id:
          type: integer
          description: The system generated uid of the user.
          format: int32
        role:
          $ref: '#/components/schemas/UserRole'
        username:
          type: string
        email:
          type: string
        nickname:
          type: string
        avatarUrl:
          type: string
        description:
          type: string
        password:
          type: string
        state:
          $ref: '#/components/schemas/v1State'
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
    v1Visibility:
      type: string
      default: VISIBILITY_UNSPECIFIED
      enum:
      - VISIBILITY_UNSPECIFIED
      - PRIVATE
      - PROTECTED
      - PUBLIC
    v1WorkspaceProfile:
      type: object
      properties:
        owner:
          title: "The name of instance owner.\r\nFormat: \"users/{id}\""
          type: string
        version:
          title: version is the current version of instance
          type: string
        mode:
          type: string
          description: "mode is the instance mode (e.g. \"prod\", \"dev\" or \"demo\"\
            )."
        instanceUrl:
          type: string
          description: instance_url is the URL of the instance.
x-original-swagger-version: "2.0"
